{"version":3,"file":"embla-carousel-class-names.esm.js","sources":["src/components/Options.ts","src/components/utils.ts","src/components/index.ts"],"sourcesContent":["import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  selected: string\n  draggable: string\n  dragging: string\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  selected: 'is-selected',\n  draggable: 'is-draggable',\n  dragging: 'is-dragging',\n}\n\nexport type ClassNamesOptionsType = Partial<OptionsType>\n","export function removeClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && !cl.contains(className)) cl.add(className)\n}\n","import { defaultOptions, ClassNamesOptionsType, OptionsType } from './Options'\nimport { addClass, removeClass } from './utils'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaEventType,\n} from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    classNames?: ClassNamesType\n  }\n}\n\nexport type ClassNamesType = CreatePluginType<{}, OptionsType>\n\nfunction ClassNames(userOptions?: ClassNamesOptionsType): ClassNamesType {\n  const optionsHandler = EmblaCarousel.optionsHandler()\n  const optionsBase = optionsHandler.merge(\n    defaultOptions,\n    ClassNames.globalOptions,\n  )\n  let options: ClassNamesType['options']\n  let carousel: EmblaCarouselType\n\n  let root: HTMLElement\n  let slides: HTMLElement[]\n  const selectedEvents: EmblaEventType[] = ['select', 'pointerUp']\n  const draggingEvents: EmblaEventType[] = ['pointerDown', 'pointerUp']\n\n  function init(embla: EmblaCarouselType): void {\n    carousel = embla\n    options = optionsHandler.atMedia(self.options)\n    root = carousel.rootNode()\n    slides = carousel.slideNodes()\n    const isDraggable = carousel.internalEngine().options.draggable\n\n    if (isDraggable) {\n      addClass(root, options.draggable)\n    }\n    if (options.dragging) {\n      draggingEvents.forEach((evt) => carousel.on(evt, toggleDraggingClass))\n    }\n    if (options.selected) {\n      selectedEvents.forEach((evt) => carousel.on(evt, toggleSelectedClass))\n      toggleSelectedClass()\n    }\n  }\n\n  function destroy(): void {\n    removeClass(root, options.draggable)\n    draggingEvents.forEach((evt) => carousel.off(evt, toggleDraggingClass))\n    selectedEvents.forEach((evt) => carousel.off(evt, toggleSelectedClass))\n    slides.forEach((slide) => removeClass(slide, options.selected))\n  }\n\n  function toggleDraggingClass(evt: EmblaEventType): void {\n    if (evt === 'pointerDown') addClass(root, options.dragging)\n    else removeClass(root, options.dragging)\n  }\n\n  function toggleSelectedClass(): void {\n    const inView = carousel.slidesInView(true)\n    const notInView = carousel.slidesNotInView(true)\n    notInView.forEach((index) => removeClass(slides[index], options.selected))\n    inView.forEach((index) => addClass(slides[index], options.selected))\n  }\n\n  const self: ClassNamesType = {\n    name: 'classNames',\n    options: optionsHandler.merge(optionsBase, userOptions),\n    init,\n    destroy,\n  }\n  return self\n}\n\nClassNames.globalOptions = <ClassNamesOptionsType | undefined>undefined\n\nexport default ClassNames\n"],"names":["defaultOptions","active","breakpoints","selected","draggable","dragging","removeClass","node","className","cl","classList","contains","remove","addClass","add","ClassNames","userOptions","optionsHandler","EmblaCarousel","optionsBase","merge","globalOptions","options","carousel","root","slides","selectedEvents","draggingEvents","init","embla","atMedia","self","rootNode","slideNodes","isDraggable","internalEngine","forEach","evt","on","toggleDraggingClass","toggleSelectedClass","destroy","off","slide","inView","slidesInView","notInView","slidesNotInView","index","name","undefined"],"mappings":"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"}